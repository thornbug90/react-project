{"version":3,"sources":["components/Profile/ProfileContainer.jsx"],"names":["compose","connect","state","profile","profilePage","status","authorisedUserId","auth","userId","isAuth","getProfileThunk","getStatusThunk","updateStatusThunk","withAuthNavigate","props","profileId","useMatch","id","params","useEffect","updateStatus"],"mappings":"yMAqEeA,sBACbC,aARsB,SAACC,GAAD,MAAY,CAClCC,QAASD,EAAME,YAAYD,QAC3BE,OAAQH,EAAME,YAAYC,OAC1BC,iBAAkBJ,EAAMK,KAAKC,OAC7BC,OAAQP,EAAMK,KAAKE,UAIM,CACvBC,oBACAC,mBACAC,wBAGFC,IAPab,EAxDU,SAACc,GACxB,IACER,EAMEQ,EANFR,iBACAI,EAKEI,EALFJ,gBACAC,EAIEG,EAJFH,eACAR,EAGEW,EAHFX,QACAE,EAEES,EAFFT,OACAO,EACEE,EADFF,kBAGIG,EAAYC,YAAS,qBAEvBC,EAAKF,EAAYA,EAAUG,OAAOV,OAASF,EAU/C,OAPAa,qBAAU,WACR,IAAMX,EAASS,EAEfP,EAAgBF,GAChBG,EAAeH,KACd,CAACS,EAAIP,EAAiBC,IAGvB,8BACE,cAAC,IAAD,2BACMG,GADN,IAEEX,QAASA,EACTE,OAAQA,EACRe,aAAcR","file":"static/js/6.343e8fdc.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { useMatch } from 'react-router-dom';\n\nimport {\n  getProfileThunk,\n  getStatusThunk,\n  updateStatusThunk,\n} from '../../redux/profileReducer';\nimport Profile from './Profile';\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\n\nconst ProfileContainer = (props) => {\n  const {\n    authorisedUserId,\n    getProfileThunk,\n    getStatusThunk,\n    profile,\n    status,\n    updateStatusThunk,\n  } = props;\n\n  const profileId = useMatch('/profile/:userId/');\n\n  let id = profileId ? profileId.params.userId : authorisedUserId\n\n  // Аналогично componentDidMount и componentDidUpdate:\n  useEffect(() => {\n    const userId = id;\n\n    getProfileThunk(userId);\n    getStatusThunk(userId);\n  }, [id, getProfileThunk, getStatusThunk]);\n\n  return (\n    <div>\n      <Profile\n        {...props}\n        profile={profile}\n        status={status}\n        updateStatus={updateStatusThunk}\n      />\n    </div>\n  );\n};\n\n// HOC FUNCTION\n// const AuthNavigateComponent = withAuthNavigate(ProfileContainer);\n\n// // FUNCTION\n// const withRouter = () => {\n//   // КОМПОНЕНТ для использования useMatch();\n//   // OLD VERSION: withRouter() function;\n//   const WithUrlDataContainerComponent = (props) => {\n//     const match = useMatch('/profile/:userId/');\n//     return <AuthNavigateComponent {...props} match={match} />;\n//   };\n\n//   return WithUrlDataContainerComponent;\n// };\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    getProfileThunk,\n    getStatusThunk,\n    updateStatusThunk,\n  }),\n  // withRouter,\n  withAuthNavigate\n)(ProfileContainer);\n"],"sourceRoot":""}