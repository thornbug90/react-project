{"version":3,"sources":["assets/images/preloader.svg","components/common/Preloader/Preloader.js","redux/authReducer.js","redux/profileReducer.js","assets/images/users.png","components/common/Paginator/Paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","hoc/withAuthNavigate.js","redux/dialogsReducer.js","components/Profile/MyPosts/MyPostsForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Profile/MyPosts/Post/Post.module.css","api/api.js","components/common/baseUrl.js","components/common/apiKey.js","reportWebVitals.js","redux/appReducer.js","redux/sidebarReducer.js","utils/helpers.js","redux/usersReducer.js","redux/reduxStore.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js"],"names":["Preloader","props","src","preloader","alt","SET_USER_AUTH_DATA","initialState","userId","email","login","isAuth","setAuthUserData","type","payload","getAuthUserDataThunk","dispatch","a","authAPI","authMe","response","resultCode","data","id","password","rememberMe","setStatus","messages","logout","authReducer","state","action","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","posts","message","likes","profile","status","addPostCreator","newPostText","getProfileThunk","profileAPI","getProfile","getStatusThunk","getStatus","updateStatusThunk","updateStatus","profileReducer","newItem","filter","p","postId","module","exports","mapStateToPropsForNavigate","auth","withAuthNavigate","Component","NavigateComponent","this","to","React","connect","dialogs","name","img","sendMessage","newMessageText","dialogsReducer","MyPostsForm","addPost","textInput","createRef","useFormik","initialValues","onSubmit","resetForm","handleChange","handleSubmit","values","isValid","dirty","placeholder","onChange","ref","value","disabled","Post","className","css","item","MyPosts","console","log","postsElements","map","postsBlock","MyPostsContainer","profilePage","ProfileStatusHook","useState","editMode","setEditMode","useEffect","autoFocus","e","currentTarget","onBlur","length","onClick","ProfileInfo","descriptionWrapper","photo","photos","large","userPhoto","descriptionContent","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Profile","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","put","subscribeAPI","followUsers","post","unfollowUsers","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIALIZED_SUCCESS","initialized","appReducer","friends","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","subscriberFlow","apiMethod","actionCreator","usersReducer","followed","totalCount","reducers","combineReducers","dialogsPage","sidebarFriends","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","nav","isActive","active","Paginator","onPageChanged","portionSize","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","i","push","portionCount","leftPageNumber","rightPageNumber","paginator","cn","selectedPage","pageNumber","User","user","followThunk","unfollowThunk","small","some","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","getUsersThunk","bind","page","Header","header","loginBlock","HeaderContainer","DialogsContainer","lazy","ProfileContainer","LoginContainer","App","initializeApp","Suspense","fallback","path","element","AppContainer","promise","Promise","all","SamuraiApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb7b24be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/preloader.aed4c9cc.svg\";","import React from 'react';\nimport preloader from '../../../assets/images/preloader.svg';\n\nconst Preloader = (props) => {\n  return <img src={preloader} alt='' />;\n};\n\nexport default Preloader;\n","import { authAPI } from '../api/api';\n\nconst SET_USER_AUTH_DATA = 'SET_USER_AUTH_DATA';\n\nconst initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_AUTH_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n// ACTION\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_AUTH_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth,\n  },\n});\n\n// THUNK-FUNCTIONS\nexport const getAuthUserDataThunk = () => async (dispatch) => {\n  const response = await authAPI.authMe();\n\n  if (response.resultCode === 0) {\n    const { id, email, login } = response.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\n\nexport const login = (email, password, rememberMe, setStatus) => async (dispatch) => {\n  const response = await authAPI.login(email, password, rememberMe);\n\n  if (response.resultCode === 0) {\n    dispatch(getAuthUserDataThunk());\n  } else {\n    setStatus(response.messages[0]);\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await authAPI.logout();\n\n  if (response.resultCode === 0) {\n    dispatch(setAuthUserData(initialState));\n  }\n};\n\nexport default authReducer;\n","import { profileAPI } from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\n\n// default state\nconst initialState = {\n  posts: [\n    { id: 1, message: 'Hi, how are you?', likes: 15 },\n    { id: 2, message: 'My first post', likes: 20 },\n  ],\n  profile: null,\n  status: '',\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      const newItem = {\n        id: 3,\n        message: action.newPostText,\n        likes: 2,\n      };\n\n      return {\n        ...state,\n        posts: [...state.posts, newItem],\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.id !== action.postId),\n      };\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile,\n      };\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n    default:\n      return state;\n  }\n};\n\n// ACTION CREATORS - функции, которые возвращают action (действие) -> объект { type: '', ... };\nexport const addPostCreator = (newPostText) => ({\n  type: ADD_POST,\n  newPostText,\n});\n\nexport const deletePostCreator = (postId) => ({\n  type: DELETE_POST,\n  postId,\n});\n\nexport const setUserProfile = (profile) => ({\n  type: SET_USER_PROFILE,\n  profile,\n});\n\nexport const setStatus = (status) => ({\n  type: SET_STATUS,\n  status,\n});\n\n// THUNK-FUNCTIONS\nexport const getProfileThunk = (userId) => async (dispatch) => {\n  const response = await profileAPI.getProfile(userId);\n\n  dispatch(setUserProfile(response));\n};\n\nexport const getStatusThunk = (userId) => async (dispatch) => {\n  const response = await profileAPI.getStatus(userId);\n\n  dispatch(setStatus(response.data));\n};\n\nexport const updateStatusThunk = (status) => async (dispatch) => {\n  const response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\n\nexport default profileReducer;\n","export default __webpack_public_path__ + \"static/media/users.fb653606.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__RisAz\",\"photo\":\"ProfileInfo_photo__3YYCg\",\"descriptionContent\":\"ProfileInfo_descriptionContent__A5GkY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToPropsForNavigate = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\n// HOC function\nexport const withAuthNavigate = (Component) => {\n  // класс-обертка для компонента, который приходит на вход\n  class NavigateComponent extends React.Component {\n    render() { \n      if (!this.props.isAuth) {\n        return <Navigate to='/login' />;\n      }\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  // Для того, чтобы пробросить в другие Компоненты общий параметр из state,\n  // делаем еще одну обертку над классом-оберткой, который создает общую логику\n  // и перерисовывает компонент, приходящий на вход\n  const ConnectAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent);\n\n  return ConnectAuthNavigateComponent;\n};\n","const SEND_MESSAGE = 'SEND-MESSAGE';\n\n// default state\nconst initialState = {\n  dialogs: [\n    {\n      id: 1,\n      name: 'Ekaterina',\n      img:\n        'https://cdn.imgbin.com/10/14/1/imgbin-female-avatar-best-yYYaN63pH07CPxi6N6b1MeiDR.jpg',\n    },\n    {\n      id: 2,\n      name: 'Dima',\n      img:\n        'https://evasailing.com/templates/rt_sienna/custom/images/boy-512.png',\n    },\n    {\n      id: 3,\n      name: 'Grisha',\n      img:\n        'https://cdn.pixabay.com/photo/2020/07/14/13/07/icon-5404125_1280.png',\n    },\n    {\n      id: 4,\n      name: 'Vika',\n      img:\n        'https://png.pngtree.com/png-vector/20190221/ourmid/pngtree-female-user-vector-avatar-icon-png-image_691518.jpg',\n    },\n  ],\n  messages: [\n    { id: 1, message: 'Hi! What`s up?' },\n    { id: 2, message: 'I`m fine, I got a job!)' },\n    { id: 3, message: 'Congratulations!' },\n  ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SEND-MESSAGE':\n      const newItem = {\n        id: 4,\n        message: action.newMessageText,\n      };\n      return {\n        ...state,\n        messages: [...state.messages, newItem],\n      };\n    default:\n      return state;\n  }\n};\n\n// ACTION CREATORS\nexport const sendMessage = (newMessageText) => ({\n  type: SEND_MESSAGE,\n  newMessageText,\n});\n\nexport default dialogsReducer;\n","import React from 'react';\nimport { useFormik } from 'formik';\n\nconst MyPostsForm = ({ addPost }) => {\n  const textInput = React.createRef();\n\n  const { handleChange, handleSubmit, values, isValid, dirty } = useFormik({\n    initialValues: {\n      newPostText: '',\n    },\n    onSubmit: ({ newPostText }, { resetForm }) => {\n      addPost(newPostText);\n\n      resetForm();\n    },\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <div>\n          <input\n            id=\"newPostText\"\n            name=\"newPostText\"\n            type=\"text\"\n            placeholder=\"Post your message\"\n            onChange={handleChange}\n            ref={textInput}\n            value={values.newPostText}\n          />\n        </div>\n        <div>\n          <button\n            type=\"submit\"\n            disabled={!isValid || !dirty}\n          >\n            Add post\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default MyPostsForm;\n","import React from 'react';\nimport css from './Post.module.css';\n\nconst Post = (props) => {\n  const { message, likes } = props;\n\n  return (\n    <div className={css.item}>\n      <img src=\"https://cdn-icons-png.flaticon.com/512/194/194938.png\" alt=\"\" />\n      {message}\n      <div>\n        <span>Like {likes}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport css from './MyPosts.module.css';\n\nimport MyPostsForm from './MyPostsForm';\nimport Post from './Post/Post';\n\nconst MyPosts = (props) => {\n  console.log('RENDER');\n  const postsElements = props.posts.map(({ id, message, likes }) => (\n    <Post key={id} message={message} likes={likes} id={id} />\n  ));\n  \n  return (\n    <div className={css.postsBlock}>\n      <h3>My posts</h3>\n      <MyPostsForm {...props} />\n      <div className={css.posts}>{postsElements}</div>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\n\nimport { addPostCreator } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => dispatch(addPostCreator(newPostText)),\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React, { useState, useEffect } from 'react';\n\n// Использование useEffect позволяет синхронизировать сущности,\n// находящиеся за пределами дерева React, со свойствами и состоянием.\nconst ProfileStatusHook = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  // синхронизация происходит, когда меняется status\n  // синхронизация с локальным и глобальным state с помощью хука =>\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]); // зависимость от статуса\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {editMode ? (\n        <div>\n          <input\n            data-testid=\"input\"\n            autoFocus={true}\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n          <div>{300 - status.length}/300</div>\n        </div>\n      ) : (\n        <div>\n          <span data-testid=\"span\" onClick={activateEditMode}>\n            {status || 'Status is empty'}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusHook;\n","import React from 'react';\nimport css from './ProfileInfo.module.css';\n\nimport Preloader from '../../common/Preloader/Preloader';\nimport userPhoto from '../../../assets/images/users.png';\nimport ProfileStatusHook from './ProfileStatusHook';\n\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div>\n        <img src=\"https://images.unsplash.com/photo-1509225770129-fbcf8a696c0b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cGFub3JhbWF8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80\" alt=\"\" />\n      </div>\n      <div className={css.descriptionWrapper}>\n        <div className={css.photo}>\n          {profile.photos.large\n          ? (<img src={profile.photos.large} alt=\"\" />)\n          : (<img src={userPhoto} alt=\"\" />)}\n        </div>\n        <div className={css.descriptionContent}>\n          <div>\n            <h3>Status:</h3>\n            <ProfileStatusHook status={status} updateStatus={updateStatus} />\n          </div>\n          <div>\n            <h3>My name:</h3> {profile.fullName}\n          </div>\n          <div>\n            <h3>About me:</h3>\n            {profile.aboutMe}\n          </div>\n          <div>\n            <h3>Contacts:</h3>\n            <img src=\"https://img.icons8.com/office/30/000000/facebook-new.png\" alt=\"\" />\n            <img src=\"https://img.icons8.com/office/30/000000/instagram-new.png\" alt=\"\" />\n            <img src=\"https://img.icons8.com/office/30/000000/youtube-play.png\" alt=\"\" />\n            <img src=\"https://img.icons8.com/office/30/000000/twitter.png\" alt=\"\" />\n          </div>\n          <div>\n            <h3>I am looking for a job:</h3>\n            {profile.lookingForAJob ? (\n              <img src=\"https://img.icons8.com/office/40/000000/binoculars.png\" alt=\"\" />\n            ) : (\n              <img src=\"https://img.icons8.com/color/48/000000/man-with-money-skin-type-3.png\" alt=\"\" />\n            )}\n          </div>\n          <div>\n            <h3>Job description:</h3>\n            {profile.lookingForAJobDescription}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\n\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = ({ profile, status, updateStatus }) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\",\"head\":\"Navbar_head__3PbiD\",\"name\":\"Navbar_name__3nKwt\",\"friends\":\"Navbar_friends__3-QW_\",\"caption\":\"Navbar_caption__s1sVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Users_img__3OuDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import * as axios from 'axios';\n\nimport BASE_URL from '../components/common/baseUrl';\nimport API_KEY from '../components/common/apiKey';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  withCredentials: true,\n  headers: {\n    'API-KEY': API_KEY,\n  },\n});\n\n// USERS\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then(({ data }) => data);\n  },\n};\n\n// PROFILES\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/${userId}`).then(({ data }) => data);\n  },\n  getStatus(userId) {\n    return instance.get(`profile/status/${userId}`);\n  },\n  updateStatus(status) {\n    return instance.put('profile/status/', { status: status });\n  },\n};\n\n// SUBSCRIBERS\nexport const subscribeAPI = {\n  followUsers(userId) {\n    return instance.post(`follow/${userId}`, {}).then(({ data }) => data);\n  },\n  unfollowUsers(userId) {\n    return instance.delete(`follow/${userId}`).then(({ data }) => data);\n  },\n};\n\n// IS AUTH ME\nexport const authAPI = {\n  authMe() {\n    return instance.get('auth/me').then(({ data }) => data);\n  },\n  login(email, password, rememberMe = false) {\n    return instance\n      .post('auth/login', { email, password, rememberMe })\n      .then(({ data }) => data);\n  },\n  logout() {\n    return instance.delete('auth/login').then(({ data }) => data);\n  },\n};\n","const BASE_URL = 'https://social-network.samuraijs.com/api/1.0/';\n\nexport default BASE_URL;","const API_KEY =  '3e0b2939-9c10-403f-95ed-db554510011f';\n\nexport default API_KEY;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getAuthUserDataThunk } from './authReducer';\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nconst initialState = {\n  initialized: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\n// ACTION\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\n\n// THUNK-FUNCTIONS\nexport const initializeApp = () => (dispatch) => {\n  const promise = dispatch(getAuthUserDataThunk());\n\n  // Если промисов много, то используем данный метод =>\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\n\nexport default appReducer;\n","// default state\nconst initialState = {\n  friends: [\n    {\n      id: 1,\n      name: 'John',\n      img:\n        'https://w7.pngwing.com/pngs/409/621/png-transparent-computer-icons-avatar-male-user-profile-others-logo-monochrome-silhouette.png',\n    },\n    {\n      id: 2,\n      name: 'Mia',\n      img:\n        'https://cdn6.aptoide.com/imgs/f/4/c/f4c2d35ee761f9be3bbeff8750d67c63_icon.png',\n    },\n    {\n      id: 3,\n      name: 'Margaret',\n      img:\n        'https://cdn1.iconfinder.com/data/icons/avatar-97/32/avatar-02-512.png',\n    },\n  ],\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n  return state;\n};\n\nexport default sidebarReducer;\n","export const updateObjectInArray = (\n  items,\n  itemId,\n  objPropName,\n  newObjProps\n) => {\n  return items.map((u) => {\n    if (u[objPropName] === itemId) {\n      return { ...u, ...newObjProps };\n    }\n    return u;\n  });\n};\n","import { usersAPI, subscribeAPI } from '../api/api';\nimport { updateObjectInArray } from '../utils/helpers';\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\n\nconst initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\n        // users: state.users.map((u) => {\n        //   // если ID из нашего state === ID из action (action creator)\n        //   if (u.id === action.userId) {\n        //     // возвращаем копию того ключа, который мы меняем\n        //     return { ...u, followed: true };\n        //   }\n        //   return u;\n        // }),\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\n      };\n    case SET_USERS:\n      return { ...state, users: action.users };\n    case SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.currentPage };\n    case SET_TOTAL_COUNT:\n      return { ...state, totalUsersCount: action.totalCount };\n    case TOGGLE_IS_FETCHING:\n      return { ...state, isFetching: action.isFetching };\n    case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\n      return {\n        ...state,\n        // при нажатии на кнопку follow/unfollow кнопка юзера (id) становится недоступной (disabled)\n        // и id добавляется в массив, при завершении процесса кнопка снова становится доступной\n        // и id удаляется из массива;\n        followingInProgress: action.isFetching\n          ? // если процесс (isFetching) === true (идет) => добавляем ID пользователя в массив,\n            // вместе с глубоким копированием старых данных (других ID)\n            [...state.followingInProgress, action.id]\n          : // если процесс (isFetching) === false (завершен) => удаляем ID пользователя из массива\n            state.followingInProgress.filter((id) => id !== action.id),\n      };\n    default:\n      return state;\n  }\n};\n\n// ACTIONS\nexport const follow = (userId) => ({\n  type: FOLLOW,\n  userId,\n});\n\nexport const unfollow = (userId) => ({\n  type: UNFOLLOW,\n  userId,\n});\n\nexport const setUsers = (users) => ({\n  type: SET_USERS,\n  users,\n});\n\nexport const setCurrentPage = (currentPage) => ({\n  type: SET_CURRENT_PAGE,\n  currentPage,\n});\n\nexport const setTotalUsersCount = (totalCount) => ({\n  type: SET_TOTAL_COUNT,\n  totalCount,\n});\n\nexport const toggleIsFetching = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\n\nexport const toggleFollowingInProgress = (isFetching, id) => ({\n  type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\n  isFetching,\n  id,\n});\n\n// THUNK-FUNCTIONS\n\n// GET USERS THUNK\nexport const getUsersThunk = (page, pageSize) => async (dispatch) => {\n  dispatch(toggleIsFetching(true));\n  dispatch(setCurrentPage(page));\n\n  const data = await usersAPI.getUsers(page, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\n\n// function flow for follow and unfollow thunks\nconst subscriberFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingInProgress(true, userId));\n\n  const data = await apiMethod(userId);\n  if (data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingInProgress(false, userId));\n};\n\n// FOLLOW THUNK\nexport const followThunk = (userId) => async (dispatch) => {\n  const apiMethod = subscribeAPI.followUsers.bind(subscribeAPI);\n\n  subscriberFlow(dispatch, userId, apiMethod, follow);\n};\n\n// UNFOLLOW THUNK\nexport const unfollowThunk = (userId) => async (dispatch) => {\n  const apiMethod = subscribeAPI.unfollowUsers.bind(subscribeAPI);\n\n  subscriberFlow(dispatch, userId, apiMethod, unfollow);\n};\n\nexport default usersReducer;\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport appReducer from './appReducer';\nimport authReducer from './authReducer';\nimport dialogsReducer from './dialogsReducer';\nimport profileReducer from './profileReducer';\nimport sidebarReducer from './sidebarReducer';\nimport usersReducer from './usersReducer';\n\n// Собираем все редьюсеры\nconst reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  sidebarFriends: sidebarReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers, composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\n// const reduxStore = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n// window.reduxStore = reduxStore;\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport css from './Navbar.module.css';\n\n// const Sidebar = (props) => {\n//   const { id, name, image } = props;\n\n//   return (\n//     <div className={css.name} id={id}>\n//       <img src={image} />\n//       <span className={css.caption}>{name}</span>\n//     </div>\n//   );\n// };\n\nconst Navbar = () => {\n  // const state = store.getState().sidebarFriends;\n\n  // const friendsElements = state.friends.map(({ id, name, img }) => (\n  //   <Sidebar id={id} name={name} image={img} />\n  // ));\n\n  return (\n    <nav className={css.nav}>\n      <div className={css.item}>\n        <NavLink\n          to=\"/profile\"\n          className={({ isActive }) => (isActive ? css.active : css.item)}\n        >\n          Profile\n        </NavLink>\n      </div>\n      <div className={css.item}>\n        <NavLink\n          to=\"/dialogs\"\n          className={({ isActive }) => (isActive ? css.active : css.item)}\n        >\n          Messages\n        </NavLink>\n      </div>\n      <div className={css.item}>\n        <NavLink\n          to=\"/users\"\n          className={({ isActive }) => (isActive ? css.active : css.item)}\n        >\n          Users\n        </NavLink>\n      </div>\n      <div className={css.item}>\n        <NavLink\n          to=\"/news\"\n          className={({ isActive }) => (isActive ? css.active : css.item)}\n        >\n          News\n        </NavLink>\n      </div>\n      <div className={css.item}>\n        <NavLink\n          to=\"/music\"\n          className={({ isActive }) => (isActive ? css.active : css.item)}\n        >\n          Music\n        </NavLink>\n      </div>\n      <div className={css.item}>\n        <NavLink\n          to=\"/settings\"\n          className={({ isActive }) => (isActive ? css.active : css.item)}\n        >\n          Settings\n        </NavLink>\n      </div>\n      {/* <div className={css.friends}>\n        <h3 className={css.head}>Friends</h3>\n        {friendsElements}\n      </div> */}\n    </nav>\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     friendsElement: state.sidebarFriends.friends,\n//   };\n// };\n\n// const mapStateToDispatch = (dispatch) => {\n//   return {\n\n//   };\n// };\n\n// // connect возвращает новую контейнерную компоненту\n// const NavbarContainer = connect(mapStateToProps, mapStateToDispatch)(Navbar);\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport css from './Paginator.module.css';\nimport cn from 'classnames';\n\nconst Paginator = ({\n  totalUsersCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10,\n}) => {\n  const [portionNumber, setPortionNumber] = useState(1);\n\n  const pagesCount = Math.ceil(totalUsersCount / pageSize);\n  const pages = [];\n  for (let i = 1; i <= pagesCount; i += 1) {\n    pages.push(i);\n  }\n\n  const portionCount = Math.ceil(pagesCount / portionSize);\n  const leftPageNumber = (portionNumber - 1) * portionSize + 1;\n  const rightPageNumber = portionNumber * portionSize;\n\n  const leftPortionNumber = () => setPortionNumber(portionNumber - 1);\n  const rightPortionNumber = () => setPortionNumber(portionNumber + 1);\n\n  return (\n    <div className={css.paginator}>\n      {portionNumber > 1 && <button onClick={leftPortionNumber}>PREV</button>}\n      {pages\n        .filter((p) => p >= leftPageNumber && p <= rightPageNumber)\n        .map((p) => (\n          <span\n            className={cn({[css.selectedPage]: currentPage === p}, css.pageNumber)}\n            key={p}\n            onClick={() => onPageChanged(p)}\n          >\n            {p}\n          </span>\n        ))}\n      {portionCount > portionNumber && <button onClick={rightPortionNumber}>NEXT</button>}\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport css from './Users.module.css';\n\nimport userPhoto from '../../assets/images/users.png';\n\n// Чистый презентационный компонент\nconst User = (props) => {\n  const {\n    user,\n    followThunk,\n    unfollowThunk,\n    followingInProgress,\n  } = props;\n\n  return (\n    <div key={user.id}>\n      <span>\n        <div>\n          <NavLink to={`/profile/${user.id}`}>\n            <img\n              src={user.photos.small !== null ? user.photos.small : userPhoto}\n              className={css.img}\n              alt=\"\"\n            />\n          </NavLink>\n        </div>\n        <div>\n          {user.followed ? (\n            <button\n              disabled={followingInProgress.some((id) => id === user.id)}\n              onClick={() => {\n                unfollowThunk(user.id);\n              }}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              disabled={followingInProgress.some((id) => id === user.id)}\n              onClick={() => {\n                followThunk(user.id);\n              }}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </span>\n      <span>\n        <span>\n          <div>{user.name}</div>\n          <div>{user.status}</div>\n        </span>\n      </span>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\n\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\n// Чистый презентационный компонент\nconst Users = (props) => {\n  const {\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    users,\n    followThunk,\n    unfollowThunk,\n    followingInProgress,\n  } = props;\n\n  return (\n    <div>\n      <Paginator\n        totalUsersCount={totalUsersCount}\n        pageSize={pageSize}\n        currentPage={currentPage}\n        onPageChanged={onPageChanged}\n      />\n      {users.map((user) => (\n        <User\n          user={user}\n          followThunk={followThunk}\n          unfollowThunk={unfollowThunk}\n          followingInProgress={followingInProgress}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Users;\n","import { createSelector } from 'reselect';\n\n// Примитивный селектор\nconst getUsersSelector = (state) => state.usersPage.users;\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n  return users.filter(u => true);\n})\n\nexport const getPageSize = (state) => state.usersPage.pageSize;\n\nexport const getTotalUsersCount = (state) => state.usersPage.totalUsersCount;\n\nexport const getCurrentPage = (state) => state.usersPage.currentPage;\n\nexport const getIsFetching = (state) => state.usersPage.isFetching;\n\nexport const getFollowingInProgress = (state) => state.usersPage.followingInProgress;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport {\n  followThunk,\n  unfollowThunk,\n  setCurrentPage,\n  toggleFollowingInProgress,\n  getUsersThunk,\n} from './../../redux/usersReducer';\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\n\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport {\n  getCurrentPage,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers,\n  getFollowingInProgress,\n} from '../../redux/usersSelectors';\n\n\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\n  }\n\n  onPageChanged = (currentPage) => {\n    this.props.getUsersThunk(currentPage, this.props.pageSize);\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <Preloader /> : null}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          onPageChanged={this.onPageChanged}\n          users={this.props.users}\n          followThunk={this.props.followThunk}\n          unfollowThunk={this.props.unfollowThunk}\n          followingInProgress={this.props.followingInProgress}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state),\n  };\n};\n\nexport default compose(\n  withAuthNavigate,\n  connect(mapStateToProps, {\n    followThunk,\n    unfollowThunk,\n    getUsersThunk,\n    setCurrentPage,\n    toggleFollowingInProgress,\n  })\n)(UsersContainer);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport css from './Header.module.css';\n\nconst Header = ({ isAuth, login, logout }) => {\n// debugger\n  return (\n    <header className={css.header}>\n      <img src=\"https://www.pikpng.com/pngl/b/88-889337_kingfisher-logo-png.png\" alt=\"\" />\n      <div className={css.loginBlock}>\n        {isAuth\n          ? (<>\n            <div>{login}</div>\n            <button type=\"button\" onClick={logout}>Logout</button>\n            </>)\n          : (<NavLink to=\"/login\"><button type=\"button\">Login</button></NavLink>)}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './Header';\nimport { logout } from '../../redux/authReducer';\n\nclass HeaderContainer extends React.Component {\n  render() {\n    return <Header {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, { logout })(\n  HeaderContainer\n);\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { connect, Provider } from 'react-redux';\nimport './App.css';\nimport store from './redux/reduxStore';\n\nimport Navbar from '../src/components/Navbar/Navbar';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\n// import News from './components/News/News';\n// import Music from './components/Music/Music';\n// import Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\n// import ProfileContainer from './components/Profile/ProfileContainer';\nimport Profile from './components/Profile/Profile';\nimport HeaderContainer from './components/Header/HeaderContainer';\n// import LoginContainer from './components/Login/LoginContainer';\nimport { initializeApp } from './redux/appReducer';\nimport Preloader from './components/common/Preloader/Preloader';\n\nconst DialogsContainer = React.lazy(() =>\n  import('./components/Dialogs/DialogsContainer')\n);\nconst ProfileContainer = React.lazy(() =>\n  import('./components/Profile/ProfileContainer')\n);\nconst LoginContainer = React.lazy(() =>\n  import('./components/Login/LoginContainer')\n);\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <React.Suspense fallback={<Preloader />}>\n            <Routes>\n              <Route path=\"profile\" element={<ProfileContainer />}>\n                <Route path=\"/profile/:id\" element={<Profile />} />\n              </Route>\n              <Route path=\"/dialogs\" element={<DialogsContainer />} />\n              <Route path=\"/login\" element={<LoginContainer />} />\n              <Route path=\"/users\" element={<UsersContainer />} />\n\n              {/* <Route path=\"/news\" element={<News />} />\n              <Route path=\"/music\" element={<Music />} />\n              <Route path=\"/settings\" element={<Settings />} /> */}\n            </Routes>\n          </React.Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\n\nconst SamuraiApp = () => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default SamuraiApp;\n","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}